'Option Explicit On
'Option Strict On
Imports System.Security.Cryptography
Imports System.Data.Entity
Imports DevExpress.XtraGrid.Views.Base
Imports DevExpress.XtraEditors.Controls
Imports DevExpress.Printing.ExportHelpers
Imports DevExpress.XtraDiagram.Base

Public Class Form1

    'Sub New()

    '    InitializeComponent()
    '    ' This line of code is generated by Data Source Configuration Wizard
    '    ' Instantiate a new DBContext
    '    Dim dbContext As BilalAccounting.DbBilalAccountingsEntities = New BilalAccounting.DbBilalAccountingsEntities()
    '    ' Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
    '    dbContext.Chart_Of_Accounts_Type.LoadAsync().ContinueWith(Sub(ByVal loadTask)
    '                                                                  ' Bind data to control when loading complete
    '                                                                  chart_Of_Accounts_TypeBindingSource.DataSource = dbContext.Chart_Of_Accounts_Type.Local.ToBindingList()
    '                                                              End Sub, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext())
    'End Sub

    Dim dbContext As BilalAccounting.DbBilalAccountingsEntities = New BilalAccounting.DbBilalAccountingsEntities()


    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles Me.Load
        LoadAcc()
        LoadGrid()
    End Sub
    Public Sub LoadAcc()
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Accounts Select ID = a.Accounts_ID, Name = a.Accounts_Name).ToList
            If dt.Count > 0 Then
                With LookUpEdit1.Properties
                    .DataSource = dt
                    .DisplayMember = "Name"
                    .ValueMember = "ID"
                End With

            Else
                LookUpEdit1.Properties.DataSource = Nothing
            End If
        End Using

        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Accounts Select New With {.ID = a.Accounts_ID, .Name = a.Accounts_Name}).ToList
            If dt.Count > 0 Then
                RepositoryItemLookUpEdit1.DataSource = dt
                RepositoryItemLookUpEdit1.DisplayMember = "Name"
                RepositoryItemLookUpEdit1.ValueMember = "ID"
            Else
                RepositoryItemLookUpEdit1.DataSource = Nothing
            End If
        End Using
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts_Type Select ID = a.Chart_Of_Accounts_Type_ID, TypeName = a.Chart_Of_Accounts_Type_Name).ToList
            If dt.Count > 0 Then
                RepositoryItemLookUpEdit2.DataSource = dt
                RepositoryItemLookUpEdit2.DisplayMember = "Name"
                RepositoryItemLookUpEdit2.ValueMember = "ID"
            Else
                RepositoryItemLookUpEdit2.DataSource = Nothing
            End If
        End Using
    End Sub

    Private Sub GridView2_RowUpdated(sender As Object, e As RowObjectEventArgs) Handles GridView1.RowUpdated, GridView2.RowUpdated, GridView3.RowUpdated
        dbContext.SaveChanges()
    End Sub

    Private Sub LookUpEdit1_Properties_ButtonClick(sender As Object, e As DevExpress.XtraEditors.Controls.ButtonPressedEventArgs) Handles LookUpEdit1.Properties.ButtonClick
        Select Case e.Button.Index
            Case 1
                dbContext.Accounts.Load()
                accountsBindingSource.DataSource = dbContext.Accounts.Local.ToBindingList()

                FlyoutPanel1.ShowPopup()
        End Select
    End Sub

    Private Sub FlyoutPanel1_ButtonClick(sender As Object, e As DevExpress.Utils.FlyoutPanelButtonClickEventArgs) Handles FlyoutPanel1.ButtonClick
        Select Case e.Button.Caption
            Case "Close"
                FlyoutPanel1.HidePopup()
        End Select
    End Sub

    Private Sub FlyoutPanel1_Hiding(sender As Object, e As DevExpress.Utils.FlyoutPanelEventArgs) Handles FlyoutPanel2.Hiding
        LoadAcc()
    End Sub
    Private Sub FlyoutPanel2_ButtonClick(sender As Object, e As DevExpress.Utils.FlyoutPanelButtonClickEventArgs) Handles FlyoutPanel2.ButtonClick
        Select Case e.Button.Caption
            Case "Close"
                FlyoutPanel2.HidePopup()
        End Select
    End Sub

    Private Sub FlyoutPanel2_Hiding(sender As Object, e As DevExpress.Utils.FlyoutPanelEventArgs) Handles FlyoutPanel2.Hiding
        LoadAcc()
    End Sub
    Private Sub LookUpEdit2_Properties_ButtonClick(sender As Object, e As DevExpress.XtraEditors.Controls.ButtonPressedEventArgs) Handles Chart_Of_Accounts_Type_ID.Properties.ButtonClick
        Select Case e.Button.Index
            Case 1
                'dbContext.Chart_Of_Accounts_Type.LoadAsync().ContinueWith(Sub(ByVal loadTask)
                '                                                              ' Bind data to control when loading complete
                '                                                              chart_Of_Accounts_TypeBindingSource.DataSource = dbContext.Chart_Of_Accounts_Type.Local.ToBindingList()
                '                                                          End Sub, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext())

                FlyoutPanel2.ShowPopup()
        End Select
    End Sub

    Private Sub LoadGrid()
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts Select
                                                         ID = a.Chart_Of_Accounts_ID,
                                                         Code = a.Chart_Of_Accounts_Code,
                                                        Desc = a.Chart_Of_Accounts_Description,
                                                        Balance = a.Chart_Of_Accounts_Beginning_Balances,
                                                        Status = a.Chart_Of_Accounts_Status).ToList
            If dt.Count > 0 Then
                GridControl1.DataSource = dt
                GridView1.Columns("ID").Visible = False
            Else
                GridControl1.DataSource = Nothing
                'GridView1.Columns("Accounts").Group()
                'GridView1.Columns("AccountType").Group()
                'GridView1.ExpandAllGroups()
            End If
        End Using
    End Sub
    Private Sub LoadGridFilter(idX As Integer)
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts Where a.Chart_Of_Accounts_Type_ID = idX Select
                                                         ID = a.Chart_Of_Accounts_ID,
                                                         Code = a.Chart_Of_Accounts_Code,
                                                        Desc = a.Chart_Of_Accounts_Description,
                                                        Balance = a.Chart_Of_Accounts_Beginning_Balances,
                                                        Status = a.Chart_Of_Accounts_Status).ToList
            If dt.Count > 0 Then
                GridControl1.DataSource = dt
                GridView1.Columns("ID").Visible = False
            Else
                GridControl1.DataSource = Nothing
            End If
        End Using
    End Sub
    Private Sub SaveCode()
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts Where a.Chart_Of_Accounts_Code = Chart_Of_Accounts_Code.Text Select a).FirstOrDefault

            If dt IsNot Nothing Then
                With dt
                    .Chart_Of_Accounts_Type_ID = CType(Chart_Of_Accounts_Type_ID.EditValue, Integer?)
                    .Chart_Of_Accounts_Code = Chart_Of_Accounts_Code.Text
                    .Chart_Of_Accounts_Description = Chart_Of_Accounts_Description.Text
                    .Chart_Of_Accounts_oName = Chart_Of_Accounts_oName.Text
                    .Chart_Of_Accounts_oFather = Chart_Of_Accounts_oFather.Text
                    .Chart_Of_Accounts_oMobile = Chart_Of_Accounts_oMobile.Text
                    .Chart_Of_Accounts_Status = CType(Chart_Of_Accounts_Status.EditValue, Boolean?)
                    .Chart_Of_Accounts_Beginning_Balances = CType(Chart_Of_Accounts_Beginning_Balances.Text, Double?)
                End With
                db.SaveChanges()
                MsgBox("Record is Updated")
            Else
                Dim dtNew = New Chart_Of_Accounts
                With dtNew
                    .Chart_Of_Accounts_Type_ID = CType(Chart_Of_Accounts_Type_ID.EditValue, Integer?)
                    .Chart_Of_Accounts_Code = Chart_Of_Accounts_Code.Text
                    .Chart_Of_Accounts_Description = Chart_Of_Accounts_Description.Text
                    .Chart_Of_Accounts_oName = Chart_Of_Accounts_oName.Text
                    .Chart_Of_Accounts_oFather = Chart_Of_Accounts_oFather.Text
                    .Chart_Of_Accounts_oMobile = Chart_Of_Accounts_oMobile.Text
                    .Chart_Of_Accounts_Status = CType(Chart_Of_Accounts_Status.EditValue, Boolean?)
                End With
                db.Chart_Of_Accounts.Add(dtNew)
                db.SaveChanges()
                MsgBox("Record id Added")
            End If
            LoadGrid()
        End Using
    End Sub

    Private Sub GridView1_RowClick(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowClickEventArgs) Handles GridView1.RowClick
        Dim idX As Integer = CInt(GridView1.GetFocusedRowCellValue("ID"))
        LoadwithFilter(idX)
    End Sub
    Public Sub LoadwithFilter(idx As Integer)
        Using db As New DbBilalAccountingsEntities
            Dim binDr As New BindingSource
            Dim dt = (From a In db.Chart_Of_Accounts Where a.Chart_Of_Accounts_ID = idx Select a).FirstOrDefault
            If dt IsNot Nothing Then
                With dt
                    Chart_Of_Accounts_Type_ID.EditValue = .Chart_Of_Accounts_Type_ID
                    Chart_Of_Accounts_Code.Text = .Chart_Of_Accounts_Code
                    Chart_Of_Accounts_Description.Text = .Chart_Of_Accounts_Description
                    Chart_Of_Accounts_oName.Text = .Chart_Of_Accounts_oName
                    Chart_Of_Accounts_oFather.Text = .Chart_Of_Accounts_oFather
                    Chart_Of_Accounts_oMobile.Text = .Chart_Of_Accounts_oMobile
                    Chart_Of_Accounts_Status.EditValue = .Chart_Of_Accounts_Status
                End With
            Else
                Chart_Of_Accounts_Type_ID.EditValue = Nothing
                Chart_Of_Accounts_Code.Text = ""
                Chart_Of_Accounts_Description.Text = """"
                Chart_Of_Accounts_oName.Text = ""
                Chart_Of_Accounts_oFather.Text = ""
                Chart_Of_Accounts_oMobile.Text = ""
                Chart_Of_Accounts_Status.EditValue = ""
            End If
        End Using
    End Sub

    Private Sub BarButtonItem1_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem1.ItemClick
        LoadGrid()
    End Sub

    Private Sub BarButtonItem2_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem2.ItemClick
        SaveCode()
    End Sub

    Private Sub Chart_Of_Accounts_Beginning_Balances_KeyDown(sender As Object, e As KeyEventArgs) Handles Chart_Of_Accounts_Beginning_Balances.KeyDown
        If e.KeyCode = Keys.Enter Then
            SaveCode()
        End If
    End Sub

    Private Sub loadType(ids As Integer)


        'Using db As New DbBilalAccountingsEntities
        Dim binX As New BindingSource
        Dim dt = (From a In dbContext.Chart_Of_Accounts_Type Where a.Accounts_ID = ids Select a).ToList
        If dt.Count > 0 Then
            binX.DataSource = dt
            GridControl3.DataSource = binX
            GridControl1.DataSource = Nothing
            'Chart_Of_Accounts_Type_ID.Properties.DataSource = dt
            'Chart_Of_Accounts_Type_ID.Properties.DisplayMember = "TypeName"
            'Chart_Of_Accounts_Type_ID.Properties.ValueMember = "ID"

        Else
            binX.DataSource = Nothing
        End If
        'End Using
    End Sub

    'Private Function loadTypeid() As Integer

    '    Dim id As Integer = 0


    '    'Using db As New DbBilalAccountingsEntities
    '    '    Dim dt = (From a In db.Chart_Of_Accounts_Type Where a.Accounts_ID = Ids Select ID = a.Chart_Of_Accounts_Type_ID, TypeName = a.Chart_Of_Accounts_Type_Name).ToList
    '    '    If dt.Count > 0 Then
    '    '        Chart_Of_Accounts_Type_ID.Properties.DataSource = dt
    '    '        ' Chart_Of_Accounts_Type_ID.Properties.DisplayMember = "TypeName"
    '    '        Chart_Of_Accounts_Type_ID.Properties.ValueMember = "ID"
    '    '    Else
    '    '        Chart_Of_Accounts_Type_ID.Properties.DataSource = Nothing
    '    '    End If
    '    Return id
    '    'End Using

    'End Function



    Private Sub BarButtonItem3_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem3.ItemClick
        loadType(1)
        BarButtonItem3.Down = True
        BarButtonItem4.Down = False
        BarButtonItem5.Down = False
        BarButtonItem6.Down = False
        BarButtonItem7.Down = False
    End Sub

    Private Sub BarButtonItem4_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem4.ItemClick
        loadType(2)
        BarButtonItem3.Down = False
        BarButtonItem4.Down = True
        BarButtonItem5.Down = False
        BarButtonItem6.Down = False
        BarButtonItem7.Down = False

    End Sub

    Private Sub BarButtonItem5_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem5.ItemClick
        loadType(3)
        BarButtonItem3.Down = False
        BarButtonItem4.Down = False
        BarButtonItem5.Down = True
        BarButtonItem6.Down = False
        BarButtonItem7.Down = False
    End Sub

    Private Sub BarButtonItem6_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem6.ItemClick
        loadType(4)
        BarButtonItem3.Down = False
        BarButtonItem4.Down = False
        BarButtonItem5.Down = False
        BarButtonItem6.Down = True
        BarButtonItem7.Down = False
    End Sub

    Private Sub BarButtonItem7_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem7.ItemClick
        loadType(6)
        BarButtonItem3.Down = False
        BarButtonItem4.Down = False
        BarButtonItem5.Down = False
        BarButtonItem6.Down = False
        BarButtonItem7.Down = True
    End Sub

    Private Sub BarButtonItem8_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem8.ItemClick
        GridControl1.MainView = GridView1
        LoadGrid()
    End Sub

    Private Sub BarButtonItem9_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem9.ItemClick
        'GridControl1.MainView = GridView4
        'LoadMasterDetailView()
        LoadUnion()
    End Sub
    Public Sub LoadMasterDetailView()
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Accounts
                      Group Join b In db.Chart_Of_Accounts_Type
                          On a.Accounts_ID Equals b.Accounts_ID
                          Into z = Group
                      From b In z.DefaultIfEmpty
                      Group Join c In db.Chart_Of_Accounts
                              On b.Chart_Of_Accounts_Type_ID Equals c.Chart_Of_Accounts_Type_ID
                              Into x = Group
                      From c In x.DefaultIfEmpty
                      Select ID = a.Accounts_ID, Name = a.Accounts_Name, b.Chart_Of_Accounts_Type_Name, c.Chart_Of_Accounts_Code, c.Chart_Of_Accounts_Description).ToList
            'Dim dt = (From a In db.Chart_Of_Accounts Select
            '                                             ID = a.Chart_Of_Accounts_ID,
            '                                             Accounts = a.Chart_Of_Accounts_Type.Account.Accounts_Type,
            '                                             AccountType = a.Chart_Of_Accounts_Type.Chart_Of_Accounts_Type_Name,
            '                                             Code = a.Chart_Of_Accounts_Code,
            '                                            Desc = a.Chart_Of_Accounts_Description,
            '                                            oName = a.Chart_Of_Accounts_oName,
            '                                            oFather = a.Chart_Of_Accounts_oFather,
            '                                            oMobile = a.Chart_Of_Accounts_oMobile,
            '                                            Balance = a.Chart_Of_Accounts_Beginning_Balances,
            '                                            Status = a.Chart_Of_Accounts_Status).ToList
            If dt.Count > 0 Then
                GridControl4.DataSource = dt
            End If
        End Using
    End Sub
    Public Sub LoadUnion()
        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Accounts Select ID = a.Accounts_ID, Name = a.Accounts_Name).ToList

            Dim dt2 = (From a In db.Chart_Of_Accounts_Type Select ID = a.Chart_Of_Accounts_Type_ID, Name = a.Chart_Of_Accounts_Type_Name).ToList


            Dim dtx = dt.Union(dt2)

            If dtx.Count > 0 Then
                GridControl4.DataSource = dtx
            End If
        End Using
    End Sub

    Private Sub BarButtonItem10_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem10.ItemClick

        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts Where a.Chart_Of_Accounts_Code = Chart_Of_Accounts_Code.Text Select a).FirstOrDefault

            If dt IsNot Nothing Then
                db.Chart_Of_Accounts.Remove(dt)
                db.SaveChanges()
                MsgBox("Record Deleted")
            End If
            LoadGrid()
        End Using
    End Sub

    Private Sub BarButtonItem11_ItemClick(sender As Object, e As DevExpress.XtraBars.ItemClickEventArgs) Handles BarButtonItem11.ItemClick

        Using db As New DbBilalAccountingsEntities
            Dim dt = (From a In db.Chart_Of_Accounts
                      Group By a.Chart_Of_Accounts_Type.Accounts_ID
                              Into x = Group, bal = Sum(a.Chart_Of_Accounts_Beginning_Balances)
                      Select Name = x.FirstOrDefault.Chart_Of_Accounts_Type.Account.Accounts_Name, bal).ToList
            'Dim dt = (From a In db.Chart_Of_Accounts Select
            '                                             ID = a.Chart_Of_Accounts_ID,
            '                                             Accounts = a.Chart_Of_Accounts_Type.Account.Accounts_Type,
            '                                             AccountType = a.Chart_Of_Accounts_Type.Chart_Of_Accounts_Type_Name,
            '                                             Code = a.Chart_Of_Accounts_Code,
            '                                            Desc = a.Chart_Of_Accounts_Description,
            '                                            oName = a.Chart_Of_Accounts_oName,
            '                                            oFather = a.Chart_Of_Accounts_oFather,
            '                                            oMobile = a.Chart_Of_Accounts_oMobile,
            '                                            Balance = a.Chart_Of_Accounts_Beginning_Balances,
            '                                            Status = a.Chart_Of_Accounts_Status).ToList



            Dim dt1 = (From a In db.Chart_Of_Accounts Select a.Chart_Of_Accounts_Beginning_Balances).Sum


            If dt1 IsNot Nothing Then
                GridControl4.DataSource = dt1
            End If


            Dim dt2 = (From a In db.Chart_Of_Accounts Select a.Chart_Of_Accounts_ID).Max
            If Not IsNothing(dt2) Then
                GridControl4.DataSource = dt2
            End If

        End Using
    End Sub

    Private Sub Chart_Of_Accounts_Type_ID_EditValueChanged(sender As Object, e As EventArgs) Handles Chart_Of_Accounts_Type_ID.EditValueChanged

    End Sub

    Private Sub GridView3_RowClick(sender As Object, e As DevExpress.XtraGrid.Views.Grid.RowClickEventArgs) Handles GridView3.RowClick
        LoadGridFilter(GridView3.GetFocusedRowCellValue("Chart_Of_Accounts_Type_ID"))
    End Sub
End Class